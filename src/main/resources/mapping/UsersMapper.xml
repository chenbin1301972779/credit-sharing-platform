<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fanruan.platform.mapper.UsersMapper">

    <resultMap id="getSubUserListResultMap" type="com.fanruan.platform.bean.User">
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="mobile" jdbcType="VARCHAR" property="mobile" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="companyName" jdbcType="VARCHAR" property="companyName" />
        <result column="deptName" jdbcType="VARCHAR" property="deptName" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="companyCode" jdbcType="VARCHAR" property="companyCode" />
        <result column="deptCode" jdbcType="VARCHAR" property="deptCode" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="newcompanyFlag" jdbcType="VARCHAR" property="newcompanyFlag" />
        <result column="permissionRoles" jdbcType="VARCHAR" property="permissionRoles" />
    </resultMap>

    <select id="getSubUserList" resultType="com.fanruan.platform.bean.User">
        with ds1 as(
        SELECT CODE,NAME,SCODE,SNAME FROM BIUSER.ODS_HR_ORG
        UNION
        SELECT CODE,NAME,SCODE,SNAME FROM BIUSER.INPUT_HR_ORG
        )
        SELECT M.* FROM (
        SELECT ROWNUM AS rowno,N.*
        FROM (
        SELECT
        t.user_id as userId,
        t.username as username,
        t.password as password,
        t.mobile as mobile,
        t.email as email,
        t.company_name as companyName,
        t.dept_name as deptName,
        t.name as name,
        t.company_code as companyCode,
        t.dept_code as deptCode,
        t.status as status,
        t.newcompany_flag as newcompanyFlag,
        F_GET_PERMISSION_BY_USERID(t.user_id) as permissionRoles,
        CASE
        WHEN INSTR(F_GET_PERMISSION_BY_USERID(t.user_id),('sub_admin')) &gt; 0 THEN
        1
        ELSE
        0
        END as isSubAdmin
        FROM CREDIT_USER T
        WHERE username &lt;&gt; 'admin'
        AND company_code in (
        SELECT CODE --自身
        FROM ds1 A
        WHERE  CODE=(SELECT COMPANY_CODE FROM CREDIT_USER WHERE USERNAME=#{operator})
        UNION ALL
        SELECT CODE --下级公司
        FROM ds1 A
        WHERE SCODE=(SELECT COMPANY_CODE FROM CREDIT_USER WHERE USERNAME=#{operator})
        UNION ALL
        SELECT B.CODE --下下级公司
        FROM ds1 A
        INNER JOIN ds1 B ON A.CODE=B.SCODE
        WHERE A.SCODE=(SELECT COMPANY_CODE FROM CREDIT_USER WHERE USERNAME=#{operator})
        UNION ALL
        SELECT C.CODE --下下下级公司
        FROM ds1 A
        INNER JOIN ds1 B ON A.CODE=B.SCODE
        INNER JOIN ds1 C ON B.CODE=C.SCODE
        WHERE A.SCODE=(SELECT COMPANY_CODE FROM CREDIT_USER WHERE USERNAME=#{operator})
        UNION ALL
        SELECT D.CODE --下下下下级公司
        FROM ds1 A
        INNER JOIN ds1 B ON A.CODE=B.SCODE
        INNER JOIN ds1 C ON B.CODE=C.SCODE
        INNER JOIN ds1 D ON C.CODE=D.SCODE
        WHERE A.SCODE=(SELECT COMPANY_CODE FROM CREDIT_USER WHERE USERNAME=#{operator})
        )
        <if test="name != null and name!=''">
            and (t.name like '%'||#{name}||'%' )
        </if>
        <if test="username != null and username!=''">
        and (t.username like '%'||#{username}||'%' )
        </if>
            <if test="status != null">
            and (t.status = #{status} )
        </if>
        ORDER BY isSubAdmin DESC,status desc
        ) N
        WHERE 1=1
        <if test="isSubAdmin != null">
            and (N.isSubAdmin = #{isSubAdmin} )
        </if>
        <if test="companyCode != null and companyCode != ''">
            and (N.companyCode = #{companyCode} )
        </if>
        ) M
        WHERE 1=1
        <if test="isSubAdmin != null">
            and (M.isSubAdmin = #{isSubAdmin} )
        </if>
        AND rowno &lt;= #{pageIndex} * #{pageSize}
        AND rowno &gt; (#{pageIndex}-1) * #{pageSize}
    </select>

    <resultMap id="getSubUserListCountResultMap" type="java.lang.Integer">
        <result column="co" jdbcType="VARCHAR" property="co" />
    </resultMap>

    <select id="getSubUserListCount" resultType="java.lang.Integer">
        with ds1 as(
        SELECT CODE,NAME,SCODE,SNAME FROM BIUSER.ODS_HR_ORG
        UNION
        SELECT CODE,NAME,SCODE,SNAME FROM BIUSER.INPUT_HR_ORG
        )
        SELECT COUNT(*) as co FROM (
        SELECT
        ROWNUM AS rowno,
        t.user_id as userId,
        t.username as username,
        t.password as password,
        t.mobile as mobile,
        t.email as email,
        t.company_name as companyName,
        t.dept_name as deptName,
        t.name as name,
        t.company_code as companyCode,
        t.dept_code as deptCode,
        t.status as status,
        t.newcompany_flag as newcompanyFlag,
        F_GET_PERMISSION_BY_USERID(t.user_id) as permissionRoles,
        CASE
        WHEN INSTR(F_GET_PERMISSION_BY_USERID(t.user_id),('sub_admin')) &gt; 0 THEN
        1
        ELSE
        0
        END as isSubAdmin
        FROM CREDIT_USER T
        WHERE username &lt;&gt; 'admin'
        AND company_code in (
        SELECT CODE --自身
        FROM ds1 A
        WHERE  CODE=(SELECT COMPANY_CODE FROM CREDIT_USER WHERE USERNAME=#{operator})
        UNION ALL
        SELECT CODE --下级公司
        FROM ds1 A
        WHERE SCODE=(SELECT COMPANY_CODE FROM CREDIT_USER WHERE USERNAME=#{operator})
        UNION ALL
        SELECT B.CODE --下下级公司
        FROM ds1 A
        INNER JOIN ds1 B ON A.CODE=B.SCODE
        WHERE A.SCODE=(SELECT COMPANY_CODE FROM CREDIT_USER WHERE USERNAME=#{operator})
        UNION ALL
        SELECT C.CODE --下下下级公司
        FROM ds1 A
        INNER JOIN ds1 B ON A.CODE=B.SCODE
        INNER JOIN ds1 C ON B.CODE=C.SCODE
        WHERE A.SCODE=(SELECT COMPANY_CODE FROM CREDIT_USER WHERE USERNAME=#{operator})
        UNION ALL
        SELECT D.CODE --下下下下级公司
        FROM ds1 A
        INNER JOIN ds1 B ON A.CODE=B.SCODE
        INNER JOIN ds1 C ON B.CODE=C.SCODE
        INNER JOIN ds1 D ON C.CODE=D.SCODE
        WHERE A.SCODE=(SELECT COMPANY_CODE FROM CREDIT_USER WHERE USERNAME=#{operator})
        )
        <if test="name != null and name!=''">
            and (t.name like '%'||#{name}||'%' )
        </if>
        <if test="username != null and username!=''">
            and (t.username like '%'||#{username}||'%' )
        </if>
        <if test="status != null">
            and (t.status = #{status} )
        </if>
        <if test="companyCode != null and companyCode != ''">
            and (t.companyCode = #{companyCode} )
        </if>
        ) M
        WHERE 1=1
        <if test="isSubAdmin != null">
            and (M.isSubAdmin = #{isSubAdmin} )
        </if>
    </select>

    <insert id="insertStep1" parameterType="com.fanruan.platform.bean.User"  >
        --门户用户表
        INSERT INTO FINEDB1.FINE_USER (
            ID,
            CREATIONTYPE,
            EMAIL,
            ENABLE,
            LASTOPERATIONTYPE,
            MALE,
            MOBILE,
            PASSWORD,
            USERNAME,
            REALNAME
        ) SELECT
              LOWER (SYS_GUID()) AS ID,
              1 AS CREATIONTYPE,
              #{email,jdbcType=VARCHAR} AS EMAIL,
              1 AS ENABLE,
              1 AS LASTOPERATIONTYPE,
              1 AS MALE,
              #{mobile,jdbcType=VARCHAR} AS MOBILE,
              '8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92' AS PASSWORD,
              #{username} AS USERNAME,
              #{name} AS REALNAME
            FROM
              dual
            WHERE
                #{username} NOT IN (
                SELECT DISTINCT
                  username
                FROM
                  FINEDB1.FINE_USER
              )
    </insert>
    <insert id="insertStep2" parameterType="com.fanruan.platform.bean.User"  >
        --门户-用户角色中间表
        INSERT
            WHEN NOT EXISTS (
        SELECT
            userid
        FROM
            FINEDB1.FINE_USER_ROLE_MIDDLE
        WHERE
                userid = (
                SELECT
                    ID
                FROM
                    FINEDB1.FINE_USER
                WHERE
                    USERNAME = #{username}
            )
            ) THEN
        INTO FINEDB1.FINE_USER_ROLE_MIDDLE (ID, ROLEID, ROLETYPE, USERID) SELECT
                                                                              LOWER (SYS_GUID()) AS ID,
                                                                              '4f056455-ae4d-4374-a4b6-9e27b1d8892c' AS roleId,
                                                                              2 AS roleType,
                                                                              ID AS USERid
                                                                          FROM
                                                                              FINEDB1.FINE_USER
                                                                          WHERE
                                                                              USERname = #{username}
    </insert>
    <insert id="insertStep3" parameterType="com.fanruan.platform.bean.User"  >
        --门户-成员公司表
        INSERT INTO FINEDB1.FINE_POST (
            ID,
            CREATIONTYPE,
            ENABLE,
            LASTOPERATIONTYPE,
            NAME
        ) SELECT
              LOWER (SYS_GUID()) AS ID,
              1 AS CREATIONTYPE,
              1 AS ENABLE,
              1 AS LASTOPERATIONTYPE,
              #{companyName} AS NAME
        FROM
          dual
        WHERE
          #{companyName} NOT IN (
            SELECT DISTINCT
              NAME
            FROM
              FINEDB1.FINE_POST
          )
    </insert>
    <insert id="insertStep4" parameterType="com.fanruan.platform.bean.User"  >
        --门户-成员公司二级公司中间表
        INSERT
            WHEN NOT EXISTS (
        SELECT
            ID
        FROM
            FINEDB1.FINE_DEP_ROLE
        WHERE
                postid in (
                SELECT
                    POSTID
                FROM
                    FINEDB1.FINE_DEP_ROLE a left JOIN
                    FINEDB1.FINE_POST b on a.POSTID = b.ID
                where
                    a.DEPARTMENTID = '20932798-1323-4a2b-b84a-dbe7a906335d'
                  and
                    b.name = #{companyName}
            )
            ) THEN
        INTO FINEDB1.FINE_DEP_ROLE (
            ID,
            CREATIONTYPE,
            DEPARTMENTID,
            LASTOPERATIONTYPE,
            postid
        ) SELECT
              LOWER (SYS_GUID()) AS ID,
              1 AS CREATIONTYPE,
              '20932798-1323-4a2b-b84a-dbe7a906335d' AS DEPARTMENTID,
              1 AS LASTOPERATIONTYPE,
              ID AS postid
          FROM
              FINEDB1.FINE_POST
          WHERE
              NAME = #{companyName}
    </insert>
    <insert id="insertStep5" parameterType="com.fanruan.platform.bean.User"  >
        --门户-用户部门中间表
        INSERT
            WHEN NOT EXISTS (
        SELECT
            ID
        FROM
            FINEDB1.FINE_USER_ROLE_MIDDLE
        WHERE
                USERID = (
                SELECT
                    ID
                FROM
                    FINEDB1.FINE_USER
                WHERE
                    userNAME = #{username}
            )
          and ROLEID in (
            SELECT DISTINCT
                b. ID AS ROLEID
            FROM
                FINEDB1.FINE_POST A
                    LEFT JOIN FINEDB1.FINE_DEP_ROLE b ON A . ID = b.postid
            WHERE
                NAME = #{companyName}
        )
            ) THEN
        INTO FINEDB1.FINE_USER_ROLE_MIDDLE (ID, ROLEID, ROLETYPE, USERID) SELECT
                                                                              LOWER (SYS_GUID()) AS ID,
                                                                              (
                                                                                  SELECT DISTINCT
                                                                                      b.ID AS ROLEID
                                                                                  FROM
                                                                                      FINEDB1.FINE_POST A
                                                                                          LEFT JOIN FINEDB1.FINE_DEP_ROLE b ON A . ID = b.postid
                                                                                          LEFT JOIN FINEDB1.FINE_USER_ROLE_MIDDLE d on b.id=d.roleid
                                                                                          LEFT JOIN FINEDB1.FINE_USER c on d.userid=c.id
                                                                                  where
                                                                                      a.NAME = #{companyName} and b.DEPARTMENTID = '20932798-1323-4a2b-b84a-dbe7a906335d'
                                                                              ),
                                                                              1,
                                                                              (
                                                                                  SELECT DISTINCT
                                                                                      ID AS USERID
                                                                                  FROM
                                                                                      FINEDB1.FINE_USER
                                                                                  WHERE
                                                                                      username = #{username}
                                                                              )
                                                                          FROM
                                                                              dual
    </insert>


    <resultMap id="getUserListLevelCountResultMap" type="java.lang.Integer">
        <result column="co" jdbcType="VARCHAR" property="co" />
    </resultMap>

    <select id="getUserListLevelCount" resultType="java.lang.Integer">
<!--        with ds1 as(-->
<!--        SELECT CODE,NAME,SCODE,SNAME FROM BIUSER.ODS_HR_ORG-->
<!--        UNION-->
<!--        SELECT CODE,NAME,SCODE,SNAME FROM BIUSER.INPUT_HR_ORG-->
<!--        )-->
<!--        SELECT count(1) as co FROM (-->
<!--        SELECT M.* FROM (-->
<!--        SELECT ROWNUM AS rowno,N.*-->
<!--        FROM (-->
<!--        SELECT-->
<!--        USER_ID,USERNAME,PASSWORD,MOBILE,EMAIL,COMPANY_NAME,DEPT_NAME,COMPANY_CODE,DEPT_CODE,STATUS,NEWCOMPANY_FLAG,-->
<!--        F_GET_PERMISSION_BY_USERID(user_id) as permissionRoles,-->
<!--        CASE WHEN INSTR(F_GET_PERMISSION_BY_USERID(user_id),('sub_admin')) > 0 THEN 1 ELSE 0 END as isSubAdmin, NAME-->
<!--        FROM CREDIT_USER-->
<!--        WHERE COMPANY_CODE IN (-->
<!--        SELECT CODE &#45;&#45;自身-->
<!--        FROM ds1 A-->
<!--        WHERE 1 = 1-->
<!--        <if test="companyCode != null and companyCode != ''">-->
<!--            and (A.SCODE = #{companyCode} )-->
<!--        </if>UNION ALL-->
<!--        SELECT-->
<!--        CODE &#45;&#45;下级公司-->
<!--        FROM ds1-->
<!--        A-->
<!--        WHERE 1 = 1-->
<!--        <if test="companyCode != null and companyCode != ''">-->
<!--            and (A.SCODE = #{companyCode} )-->
<!--        </if>-->
<!--        UNION ALL-->
<!--        SELECT B.-->
<!--        CODE &#45;&#45;下下级公司-->
<!--        FROM ds1 A-->
<!--        INNER-->
<!--        JOIN ds1 B ON A.CODE=B.SCODE-->
<!--        WHERE 1 = 1-->
<!--        <if test="companyCode != null and companyCode != ''">-->
<!--            and (A.SCODE = #{companyCode} )-->
<!--        </if>-->
<!--        UNION-->
<!--        ALL-->
<!--        SELECT C-->
<!--        .CODE &#45;&#45;下下下级公司-->
<!--        FROM-->
<!--        ds1 A-->
<!--        INNER-->
<!--        JOIN ds1 B ON A.CODE=B.SCODE-->
<!--        INNER-->
<!--        JOIN ds1 C ON B.CODE=C.SCODE-->
<!--        WHERE 1 = 1-->
<!--        <if test="companyCode != null and companyCode != ''">-->
<!--            and (A.SCODE = #{companyCode} )-->
<!--        </if>-->
<!--        UNION-->
<!--        ALL-->
<!--        SELECT-->
<!--        D.CODE &#45;&#45;下下下下级公司-->
<!--        FROM-->
<!--        ds1 A-->
<!--        INNER-->
<!--        JOIN ds1 B ON A.CODE=B.SCODE-->
<!--        INNER-->
<!--        JOIN ds1 C ON B.CODE=C.SCODE-->
<!--        INNER-->
<!--        JOIN ds1 D ON C.CODE=D.SCODE-->
<!--        WHERE 1 = 1-->
<!--        <if test="companyCode != null and companyCode != ''">-->
<!--            and (A.SCODE = #{companyCode} )-->
<!--        </if>-->
<!--        )-->
<!--        <if test="status != null">-->
<!--            and (STATUS = #{status} )-->
<!--        </if>-->
<!--        <if test="username != null and username!=''">-->
<!--            and (USERNAME like '%'||#{username}||'%' )-->
<!--        </if>-->
<!--        ) N-->
<!--        ) M-->
<!--        WHERE 1 = 1-->
<!--        <if test="isSubAdmin != null">-->
<!--            and (M.isSubAdmin = #{isSubAdmin} )-->
<!--        </if>-->
<!--        <if test="name != null and name!=''">-->
<!--            and (M.NAME like '%'||#{name}||'%' )-->
<!--        </if>-->
<!--        )-->
        with ds1 as(
        SELECT CODE,NAME,SCODE,SNAME FROM BIUSER.ODS_HR_ORG WHERE ENABLESTATE='2'
        UNION
        SELECT CODE,NAME,SCODE,SNAME FROM BIUSER.INPUT_HR_ORG WHERE ENABLESTATE='1'
        )
        SELECT COUNT(1) as co
        FROM (
        SELECT M.* FROM (
        SELECT ROWNUM AS rowno,N.*
        FROM (
        SELECT
        USER_ID,USERNAME,PASSWORD,MOBILE,EMAIL,ds1.NAME as COMPANY_NAME,DEPT_NAME,ds1.CODE as COMPANY_CODE,DEPT_CODE,STATUS,NEWCOMPANY_FLAG,
      --  F_GET_PERMISSION_BY_USERID(user_id) as permissionRoles,
       -- CASE WHEN INSTR(F_GET_PERMISSION_BY_USERID(user_id),('sub_admin')) > 0 THEN 1 ELSE 0 END as isSubAdmin,
        U.ROLE_NAME as permissionRoles,
        CASE WHEN U.ROLE_NAME = '子管理员' THEN 1 ELSE 0 END as isSubAdmin,
       U.NAME
        FROM CREDIT_USER U
        LEFT JOIN ds1
        on U.COMPANY_CODE = ds1.CODE
        WHERE  USER_ID!=1 AND COMPANY_CODE IN (
        SELECT CODE --自身
        FROM ds1 A
        WHERE 1 = 1
        <if test="companyCode != null and companyCode != ''">
            and (A.CODE = #{companyCode} )
        </if>UNION ALL
        SELECT
        CODE --下级公司
        FROM ds1
        A
        WHERE 1 = 1
        <if test="companyCode != null and companyCode != ''">
            and (A.SCODE = #{companyCode} )
        </if>
        UNION ALL
        SELECT B.
        CODE --下下级公司
        FROM ds1 A
        INNER
        JOIN ds1 B ON A.CODE=B.SCODE
        WHERE 1 = 1
        <if test="companyCode != null and companyCode != ''">
            and (A.SCODE = #{companyCode} )
        </if>
        UNION
        ALL
        SELECT C
        .CODE --下下下级公司
        FROM
        ds1 A
        INNER
        JOIN ds1 B ON A.CODE=B.SCODE
        INNER
        JOIN ds1 C ON B.CODE=C.SCODE
        WHERE 1 = 1
        <if test="companyCode != null and companyCode != ''">
            and (A.SCODE = #{companyCode} )
        </if>
        UNION
        ALL
        SELECT
        D.CODE --下下下下级公司
        FROM
        ds1 A
        INNER
        JOIN ds1 B ON A.CODE=B.SCODE
        INNER
        JOIN ds1 C ON B.CODE=C.SCODE
        INNER
        JOIN ds1 D ON C.CODE=D.SCODE
        WHERE 1 = 1
        <if test="companyCode != null and companyCode != ''">
            and (A.SCODE = #{companyCode} )
        </if>
        )
        <if test="status != null">
            and (STATUS = #{status} )
        </if>
        <if test="username != null and username!=''">
            and (USERNAME like '%'||#{username}||'%' )
        </if>
        <if test="name != null and name!=''">
            and (U.NAME like '%'||#{name}||'%' )
        </if>
        ORDER BY isSubAdmin DESC,status desc
        ) N
        WHERE 1 = 1
        <if test="isSubAdmin != null">
            and (N.isSubAdmin = #{isSubAdmin})
        </if>
        ) M
        ) C
    </select>

    <resultMap id="getUserListLevelResultMap" type="com.fanruan.platform.bean.User">
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="mobile" jdbcType="VARCHAR" property="mobile" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="companyName" jdbcType="VARCHAR" property="companyName" />
        <result column="deptName" jdbcType="VARCHAR" property="deptName" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="companyCode" jdbcType="VARCHAR" property="companyCode" />
        <result column="deptCode" jdbcType="VARCHAR" property="deptCode" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="newcompanyFlag" jdbcType="VARCHAR" property="newcompanyFlag" />
        <result column="permissionRoles" jdbcType="VARCHAR" property="permissionRoles" />
        <result column="roleName" jdbcType="VARCHAR" property="roleName" />

    </resultMap>

    <select id="getUserListLevel" resultType="com.fanruan.platform.bean.User">
<!--        with ds1 as(-->
<!--        SELECT CODE,NAME,SCODE,SNAME FROM BIUSER.ODS_HR_ORG-->
<!--        UNION-->
<!--        SELECT CODE,NAME,SCODE,SNAME FROM BIUSER.INPUT_HR_ORG-->
<!--        )-->
<!--        SELECT M.* FROM (-->
<!--        SELECT ROWNUM AS rowno,N.*-->
<!--        FROM (-->
<!--        SELECT-->
<!--        USER_ID,USERNAME,PASSWORD,MOBILE,EMAIL,COMPANY_NAME,DEPT_NAME,COMPANY_CODE,DEPT_CODE,STATUS,NEWCOMPANY_FLAG,-->
<!--        F_GET_PERMISSION_BY_USERID(user_id) as permissionRoles,-->
<!--        CASE WHEN INSTR(F_GET_PERMISSION_BY_USERID(user_id),('sub_admin')) > 0 THEN 1 ELSE 0 END as isSubAdmin, NAME-->
<!--        FROM CREDIT_USER-->
<!--        WHERE COMPANY_CODE IN (-->
<!--        SELECT CODE &#45;&#45;自身-->
<!--        FROM ds1 A-->
<!--        WHERE 1 = 1-->
<!--        <if test="companyCode != null and companyCode != ''">-->
<!--            and (A.SCODE = #{companyCode} )-->
<!--        </if>UNION ALL-->
<!--        SELECT-->
<!--        CODE &#45;&#45;下级公司-->
<!--        FROM ds1-->
<!--        A-->
<!--        WHERE 1 = 1-->
<!--        <if test="companyCode != null and companyCode != ''">-->
<!--            and (A.SCODE = #{companyCode} )-->
<!--        </if>-->
<!--        UNION ALL-->
<!--        SELECT B.-->
<!--        CODE &#45;&#45;下下级公司-->
<!--        FROM ds1 A-->
<!--        INNER-->
<!--        JOIN ds1 B ON A.CODE=B.SCODE-->
<!--        WHERE 1 = 1-->
<!--        <if test="companyCode != null and companyCode != ''">-->
<!--            and (A.SCODE = #{companyCode} )-->
<!--        </if>-->
<!--        UNION-->
<!--        ALL-->
<!--        SELECT C-->
<!--        .CODE &#45;&#45;下下下级公司-->
<!--        FROM-->
<!--        ds1 A-->
<!--        INNER-->
<!--        JOIN ds1 B ON A.CODE=B.SCODE-->
<!--        INNER-->
<!--        JOIN ds1 C ON B.CODE=C.SCODE-->
<!--        WHERE 1 = 1-->
<!--        <if test="companyCode != null and companyCode != ''">-->
<!--            and (A.SCODE = #{companyCode} )-->
<!--        </if>-->
<!--        UNION-->
<!--        ALL-->
<!--        SELECT-->
<!--        D.CODE &#45;&#45;下下下下级公司-->
<!--        FROM-->
<!--        ds1 A-->
<!--        INNER-->
<!--        JOIN ds1 B ON A.CODE=B.SCODE-->
<!--        INNER-->
<!--        JOIN ds1 C ON B.CODE=C.SCODE-->
<!--        INNER-->
<!--        JOIN ds1 D ON C.CODE=D.SCODE-->
<!--        WHERE 1 = 1-->
<!--        <if test="companyCode != null and companyCode != ''">-->
<!--            and (A.SCODE = #{companyCode} )-->
<!--        </if>-->
<!--        )-->
<!--        <if test="status != null">-->
<!--            and (STATUS = #{status} )-->
<!--        </if>-->
<!--        <if test="username != null and username!=''">-->
<!--            and (USERNAME like '%'||#{username}||'%' )-->
<!--        </if>-->
<!--        ) N-->
<!--        ) M-->
<!--        WHERE 1 = 1-->
<!--        <if test="isSubAdmin != null">-->
<!--            and (M.isSubAdmin = #{isSubAdmin} )-->
<!--        </if>-->
<!--        <if test="name != null and name!=''">-->
<!--            and (M.NAME like '%'||#{name}||'%' )-->
<!--        </if>-->
<!--        AND rowno &lt;= #{pageIndex} * #{pageSize}-->
<!--        AND rowno &gt; (#{pageIndex}-1) * #{pageSize}-->
<!--        order by USERNAME-->
        with ds1 as(
        SELECT CODE,NAME,SCODE,SNAME FROM BIUSER.ODS_HR_ORG WHERE ENABLESTATE='2'
        UNION
        SELECT CODE,NAME,SCODE,SNAME FROM BIUSER.INPUT_HR_ORG WHERE ENABLESTATE='1'
        )
        SELECT M.* FROM (
        SELECT ROWNUM AS rowno,N.*
        FROM (
        SELECT
        USER_ID,USERNAME,PASSWORD,MOBILE,EMAIL,ds1.NAME AS COMPANY_NAME ,ROLE_NAME,DEPT_NAME,ds1.CODE AS COMPANY_CODE,DEPT_CODE,STATUS,NEWCOMPANY_FLAG,
        --F_GET_PERMISSION_BY_USERID(user_id) as permissionRoles,
        --CASE WHEN INSTR(F_GET_PERMISSION_BY_USERID(user_id),('sub_admin')) > 0 THEN 1 ELSE 0 END as isSubAdmin,
        U.ROLE_NAME as permissionRoles,
        CASE WHEN U.ROLE_NAME = '子管理员' THEN 1 ELSE 0 END as isSubAdmin,
         U.NAME
        FROM CREDIT_USER U
        LEFT JOIN ds1
        on U.COMPANY_CODE = ds1.CODE
        WHERE  USER_ID!=1 AND COMPANY_CODE IN (
        SELECT CODE
        FROM ds1 A
        WHERE 1 = 1
        <if test="companyCode != null and companyCode != ''">
            and (A.CODE = #{companyCode} )
        </if>UNION ALL
        SELECT
        CODE
        FROM ds1
        A
        WHERE 1 = 1
        <if test="companyCode != null and companyCode != ''">
            and (A.SCODE = #{companyCode} )
        </if>
        UNION ALL
        SELECT B.
        CODE
        FROM ds1 A
        INNER
        JOIN ds1 B ON A.CODE=B.SCODE
        WHERE 1 = 1
        <if test="companyCode != null and companyCode != ''">
            and (A.SCODE = #{companyCode} )
        </if>
        UNION
        ALL
        SELECT C
        .CODE
        FROM
        ds1 A
        INNER
        JOIN ds1 B ON A.CODE=B.SCODE
        INNER
        JOIN ds1 C ON B.CODE=C.SCODE
        WHERE 1 = 1
        <if test="companyCode != null and companyCode != ''">
            and (A.SCODE = #{companyCode} )
        </if>
        UNION
        ALL
        SELECT
        D.CODE
        FROM
        ds1 A
        INNER
        JOIN ds1 B ON A.CODE=B.SCODE
        INNER
        JOIN ds1 C ON B.CODE=C.SCODE
        INNER
        JOIN ds1 D ON C.CODE=D.SCODE
        WHERE 1 = 1
        <if test="companyCode != null and companyCode != ''">
            and (A.SCODE = #{companyCode} )
        </if>
        )
        <if test="status != null">
            and (STATUS = #{status} )
        </if>
        <if test="username != null and username!=''">
            and (USERNAME like '%'||#{username}||'%' )
        </if>
        <if test="name != null and name!=''">
            and (U.NAME like '%'||#{name}||'%' )
        </if>
        ORDER BY isSubAdmin DESC,status desc
        ) N
        WHERE 1 = 1
        <if test="isSubAdmin != null">
            and (N.isSubAdmin = #{isSubAdmin})
        </if>
        ) M
        WHERE 1 = 1
        AND rowno &lt;= #{pageIndex} * #{pageSize}
        AND rowno &gt; (#{pageIndex}-1) * #{pageSize}
    </select>

    <resultMap id="getReviewerResultMap" type="java.lang.String">
        <result column="flag" jdbcType="VARCHAR" property="flag" />
    </resultMap>
    <select id="getReviewer" resultType="java.lang.String">
        SELECT CASE WHEN count(C.USERNAME)>0 THEN 1 ELSE 0 END AS FLAG FROM CREDIT_USER C
        INNER JOIN CREDIT_USER_PERMISSION P ON C.USER_ID=P.USER_ID
        WHERE C.COMPANY_CODE IN(SELECT DISTINCT O.COMPANYCODE FROM CREDIT_USER U INNER JOIN DIM_ORG O ON
        U.COMPANY_CODE=O.SUBCOMPANYCODE
        WHERE 1 = 1
        <if test="userName != null and userName!=''">
            and (U.USERNAME = #{userName} )
        </if>
        )
        AND P.PERMISSION_ROLE='zxb_report_reviewer'
    </select>
</mapper>

